CREATE OR REPLACE PROCEDURE TMS."TMS_PARTNERPAYABLE_COMDATE" 
(
  v_PAYABLEDATE TIMESTAMP
)
AS
BEGIN

/*
CREATE GLOBAL TEMPORARY TABLE TMS.TMP_PNPAYABLECOMPUTING_SA (
  SERVICEAGREEMENTID CHAR(50 BYTE),
  FEEAPPENDIXID CHAR(36 BYTE),
  FEEAPPENDIXDETAILID CHAR(36 BYTE),
  SERVICEAREAID NUMBER(10),
PARTNERID NUMBER(10),
SUBGROUPID NUMBER(10),
TECHSPECSID NUMBER(10),
TECHSPECSVALUEID NUMBER,
PRODUCTID CHAR(20),
SERVICEFEE NUMBER(20,4)
   
)
ON COMMIT PRESERVE ROWS;

CREATE GLOBAL TEMPORARY TABLE TMS.TMP_PNPAYABLECOMPUTING_FEETBL (
  PARTNERID           NUMBER(10, 0) NOT NULL,
  SERVICEAREAID       NUMBER(10, 0) NOT NULL,
  PRODUCTID           CHAR(20 BYTE) NOT NULL,
  SERVICEFEE          NUMBER(20, 4),
  SERVICEAGREEMENTID  CHAR(50 BYTE),
  FEEAPPENDIXID CHAR(36 BYTE),
  FEEAPPENDIXDETAILID CHAR(36 BYTE)
  
)
ON COMMIT PRESERVE ROWS;

CREATE GLOBAL TEMPORARY TABLE TMS.TMS_PNPAYABLE_SA(
  SERVICEAGREEMENTID CHAR(50 BYTE),
  PARTNERID NUMBER(10),
  FEEAPPENDIXID CHAR(36 BYTE),
  PNSERVICEPRICETABLEID NUMBER(10),
  AREAID NUMBER(10),
  STOREID NUMBER(10)
  
)
ON COMMIT PRESERVE ROWS;


CREATE GLOBAL TEMPORARY TABLE TMS.TMS_PNPAYABLE_SA2(
  SERVICEAGREEMENTID CHAR(50 BYTE),
  PARTNERID NUMBER(10),
  FEEAPPENDIXID CHAR(36 BYTE),
  PNSERVICEPRICETABLEID NUMBER(10),
  AREAID NUMBER(10),
  STOREID NUMBER(10)
  
)
ON COMMIT PRESERVE ROWS;

CREATE GLOBAL TEMPORARY TABLE TMS.TMS_PNPAYABLE_SA3 (
  SERVICEAGREEMENTID    CHAR(50 BYTE),
  PARTNERID             NUMBER(10, 0),
  FEEAPPENDIXID         CHAR(36 BYTE),
  PNSERVICEPRICETABLEID NUMBER(10, 0),
  AREAID                NUMBER(10, 0),
  STOREID               NUMBER(10, 0),
  PRIORITYINDEX               NUMBER(10, 0)
)
ON COMMIT PRESERVE ROWS;

CREATE GLOBAL TEMPORARY TABLE TMS.TMS_PNPAYABLE_SAPRICE (
  SERVICEAGREEMENTID CHAR(50 BYTE),
  PARTNERID NUMBER(10),
  FEEAPPENDIXID CHAR(36 BYTE),
  PNSERVICEPRICETABLEDETAILID CHAR(36) ,
  PNSERVICEPRICETABLEID NUMBER(10),
  MAINGROUPID NUMBER(10),
  SUBGROUPID NUMBER(10),
  TECHSPECSID NUMBER(10),
  TECHSPECSVALUEID NUMBER,
  ISPRICEBYTECHSPECSVALUERANGE NUMBER(1),
  FROMTECHSPECSVALUE NUMBER(20, 4),
  TOTECHSPECSVALUE NUMBER(20, 4),
  PRODUCTID CHAR(20),
  SERVICEPRICE NUMBER(20, 4)
  
)
ON COMMIT PRESERVE ROWS;

CREATE GLOBAL TEMPORARY TABLE TMS.TMS_PNPAYABLE_PRICETBL (
  SERVICEAGREEMENTID CHAR(50 BYTE),
  PARTNERID NUMBER(10),
  AREAID NUMBER(10),
  STOREID NUMBER(10),
  FEEAPPENDIXID CHAR(36 BYTE),
  PNSERVICEPRICETABLEDETAILID CHAR(36) ,
  PNSERVICEPRICETABLEID NUMBER(10),
  PRODUCTID CHAR(20),
  SERVICEPRICE NUMBER(20, 4)
  
)
ON COMMIT PRESERVE ROWS;

CREATE GLOBAL TEMPORARY TABLE  TMS.TMS_PNPAYABLE_SO (
  SHIPMENTORDERID        CHAR(20 BYTE),
    PAYABLEDATE            TIMESTAMP(6)  NOT NULL,
  PARTNERID              NUMBER(10, 0) NOT NULL,
  AREAID NUMBER(10),
  STOREID NUMBER(10),
  SHIPMENTORDERITEMID    CHAR(36 BYTE),
  PRODUCTID              CHAR(20 BYTE),
  DELIVERYUSER           NVARCHAR2(20),
  QUANTITY                NUMBER(20, 4)

  
)
ON COMMIT PRESERVE ROWS;

CREATE GLOBAL TEMPORARY TABLE  TMS.TMS_PNPAYABLE_MATERIAL (
  SHIPMENTORDERID        CHAR(20 BYTE),
  PAYABLEDATE            TIMESTAMP(6)  NOT NULL,
  PARTNERID              NUMBER(10, 0) NOT NULL,
  AREAID NUMBER(10),
  STOREID NUMBER(10),
  SHIPMENTORDERITEMID    CHAR(36 BYTE),
  PRODUCTID              CHAR(20 BYTE),
  DELIVERYUSER           NVARCHAR2(20),
  QUANTITY                NUMBER(20, 4)

  
)
ON COMMIT PRESERVE ROWS;


CREATE GLOBAL TEMPORARY TABLE  TMS.TMP_PARTNERPAYABLEDETAIL (
  PARTNERPAYABLEDETAILID CHAR(36 BYTE) DEFAULT SYS_GUID(),
  PAYABLEDATE            TIMESTAMP(6)  NOT NULL,
  PARTNERID              NUMBER(10, 0) NOT NULL,
  SHIPMENTORDERID        CHAR(20 BYTE),
  SHIPMENTORDERITEMID    CHAR(36 BYTE),
  PRODUCTID              CHAR(20 BYTE),
  DELIVERYUSER           NVARCHAR2(20),
  SERVICEFEE             NUMBER(20, 4),
  QUANTITY                NUMBER(20, 4),
  PAYABLEAMOUNT          NUMBER(20, 4) NOT NULL,
  UPDATEDUSER            NVARCHAR2(20),
  UPDATEDDATE            TIMESTAMP(6)
)
ON COMMIT PRESERVE ROWS;


*/


DELETE TMS.TMS_PNPAYABLE_SA;
DELETE TMS.TMS_PNPAYABLE_SA2;
DELETE TMS.TMS_PNPAYABLE_SAPRICE;
DELETE TMS.TMS_PNPAYABLE_PRICETBL;



--Lấy thông tin phí từ các phụ lục hợp đồng còn hiệu lực theo khu vực
--Chỉ lấy dòng đầu tiên bảng giá theo đối tác và khu vực
INSERT INTO TMS.TMS_PNPAYABLE_SA(
  SERVICEAGREEMENTID,
  PARTNERID,
  FEEAPPENDIXID, 
  PNSERVICEPRICETABLEID,
  AREAID,
  STOREID
  
)

SELECT SERVICEAGREEMENTID, PARTNERID, FEEAPPENDIXID,  PNSERVICEPRICETABLEID, AREAID, STOREID  FROM
(
SELECT TMS_SERVICEAGREEMENT.SERVICEAGREEMENTID,
  TMS_SERVICEAGREEMENT.PARTNERID,
  TMS_SERVICEAGREEMENT_APPENDIX.FEEAPPENDIXID,
  TMS_SERVICEAGREEMENT_APPENDIX.PNSERVICEPRICETABLEID,
  TMS_SERVICEAGREEMENT_AREA.AREAID,
  0 STOREID,
  TMS_SERVICEAGREEMENT_APPENDIX.PRIORITYINDEX,
  ROW_NUMBER() over (PARTITION BY TMS_SERVICEAGREEMENT.PARTNERID, TMS_SERVICEAGREEMENT_AREA.AREAID ORDER BY TMS_SERVICEAGREEMENT_APPENDIX.APPLYFROMDATE DESC) AS RowIndex
  
 FROM TMS.TMS_SERVICEAGREEMENT
 JOIN TMS.TMS_SERVICEAGREEMENT_AREA ON TMS_SERVICEAGREEMENT.SERVICEAGREEMENTID = TMS_SERVICEAGREEMENT_AREA.SERVICEAGREEMENTID
JOIN TMS.TMS_SERVICEAGREEMENT_APPENDIX ON TMS_SERVICEAGREEMENT.SERVICEAGREEMENTID = TMS_SERVICEAGREEMENT_APPENDIX.SERVICEAGREEMENTID

WHERE  TMS_SERVICEAGREEMENT.ISDELETED = 0
AND TMS_SERVICEAGREEMENT.ISACTIVED = 1
AND TMS_SERVICEAGREEMENT_AREA.ISDELETED  = 0
AND TMS_SERVICEAGREEMENT_AREA.ISACTIVED = 1
AND TMS_SERVICEAGREEMENT_APPENDIX.ISDELETED = 0
AND TMS_SERVICEAGREEMENT_APPENDIX.ISACTIVED = 1
AND TMS.TMS_SERVICEAGREEMENT.SIGNEDDATE < TRUNC(V_PAYABLEDATE) + 1
AND NVL(TMS.TMS_SERVICEAGREEMENT.EXTENDEDDATE, TMS.TMS_SERVICEAGREEMENT.EXPIREDDATE) >=  TRUNC(v_PAYABLEDATE)

  AND TMS.TMS_SERVICEAGREEMENT_APPENDIX.APPLYTODATE >= TRUNC(v_PAYABLEDATE, 'DD')
AND TMS.TMS_SERVICEAGREEMENT_APPENDIX.APPLYFROMDATE < TRUNC(v_PAYABLEDATE, 'DD') + 1
AND NOT EXISTS(SELECT 1 FROM TMS_SERVICEAGREEMENT_STORE 
WHERE TMS_SERVICEAGREEMENT.SERVICEAGREEMENTID = TMS_SERVICEAGREEMENT_STORE.SERVICEAGREEMENTID
AND TMS_SERVICEAGREEMENT_STORE.ISDELETED  = 0
AND TMS_SERVICEAGREEMENT_STORE.ISACTIVED = 1)
)
WHERE RowIndex = 1;




--Lấy thông tin phí từ các phụ lục hợp đồng còn hiệu lực theo kho
INSERT INTO TMS.TMS_PNPAYABLE_SA2(
  SERVICEAGREEMENTID,
  PARTNERID,
  FEEAPPENDIXID,
  PNSERVICEPRICETABLEID,
  AREAID,
  STOREID
  
)
SELECT SERVICEAGREEMENTID,
  PARTNERID,
  FEEAPPENDIXID,
  PNSERVICEPRICETABLEID,
  AREAID,
  STOREID
  FROM
  (
SELECT TMS_SERVICEAGREEMENT.SERVICEAGREEMENTID,
  TMS_SERVICEAGREEMENT.PARTNERID,
  TMS_SERVICEAGREEMENT_APPENDIX.FEEAPPENDIXID,
  TMS_SERVICEAGREEMENT_APPENDIX.PNSERVICEPRICETABLEID,
  0 AREAID,
  TMS_SERVICEAGREEMENT_STORE.STOREID,
    TMS_SERVICEAGREEMENT_APPENDIX.PRIORITYINDEX,
  ROW_NUMBER() over (PARTITION BY TMS_SERVICEAGREEMENT.PARTNERID, TMS_SERVICEAGREEMENT_STORE.STOREID ORDER BY TMS_SERVICEAGREEMENT_APPENDIX.APPLYFROMDATE DESC) AS RowIndex

  
 FROM TMS.TMS_SERVICEAGREEMENT
 JOIN TMS.TMS_SERVICEAGREEMENT_STORE ON TMS_SERVICEAGREEMENT.SERVICEAGREEMENTID = TMS_SERVICEAGREEMENT_STORE.SERVICEAGREEMENTID
JOIN TMS.TMS_SERVICEAGREEMENT_APPENDIX ON TMS_SERVICEAGREEMENT.SERVICEAGREEMENTID = TMS_SERVICEAGREEMENT_APPENDIX.SERVICEAGREEMENTID

WHERE  TMS_SERVICEAGREEMENT.ISDELETED = 0
AND TMS_SERVICEAGREEMENT.ISACTIVED = 1
AND TMS_SERVICEAGREEMENT_STORE.ISDELETED  = 0
AND TMS_SERVICEAGREEMENT_STORE.ISACTIVED = 1
AND TMS_SERVICEAGREEMENT_APPENDIX.ISDELETED = 0
AND TMS_SERVICEAGREEMENT_APPENDIX.ISACTIVED = 1
AND TMS.TMS_SERVICEAGREEMENT.SIGNEDDATE < TRUNC(V_PAYABLEDATE) + 1
AND NVL(TMS.TMS_SERVICEAGREEMENT.EXTENDEDDATE, TMS.TMS_SERVICEAGREEMENT.EXPIREDDATE) >=  trunc(v_PAYABLEDATE)
AND TMS.TMS_SERVICEAGREEMENT_APPENDIX.APPLYTODATE >= TRUNC(v_PAYABLEDATE, 'DD')
AND TMS.TMS_SERVICEAGREEMENT_APPENDIX.APPLYFROMDATE < TRUNC(v_PAYABLEDATE, 'DD') + 1

)
WHERE RowIndex = 1;

 
--OPEN v_Out FOR
--
--SELECT * FROM TMS.TMS_PNPAYABLE_SA2;
--
--
-- RETURN;



--Đơn giá phí theo sản phẩm cụ thể
INSERT INTO TMS.TMS_PNPAYABLE_PRICETBL (
  PNSERVICEPRICETABLEDETAILID,
  PNSERVICEPRICETABLEID,
  PRODUCTID,
  SERVICEPRICE,
  ISCHECKMINQUANTITY,
  REWARDABLEMINQUANTITY  
  
)

SELECT 
  PNSERVICEPRICETABLEDETAILID,
  TMS_PNSERVICEPRICETABLEDETAIL.PNSERVICEPRICETABLEID,
  PRODUCTID,
  SERVICEPRICE ,
  TMS_PNSERVICEPRICETABLEDETAIL.ISCHECKMINQUANTITY,
  TMS_PNSERVICEPRICETABLEDETAIL.REWARDABLEMINQUANTITY  
 FROM TMS.TMS_PNSERVICEPRICETABLE
 JOIN TMS.TMS_PNSERVICEPRICETABLEDETAIL ON TMS_PNSERVICEPRICETABLE.PNSERVICEPRICETABLEID = TMS_PNSERVICEPRICETABLEDETAIL.PNSERVICEPRICETABLEID
WHERE TMS_PNSERVICEPRICETABLE.ISDELETED = 0
AND TMS_PNSERVICEPRICETABLE.ISACTIVED = 1
AND TMS_PNSERVICEPRICETABLEDETAIL.PRODUCTID IS NOT NULL;


--Đơn giá phí theo giá trị thông số kỹ thuật
INSERT INTO TMS.TMS_PNPAYABLE_PRICETBL (
  PNSERVICEPRICETABLEDETAILID,
  PNSERVICEPRICETABLEID,
  PRODUCTID,
  SERVICEPRICE,
  ISCHECKMINQUANTITY,
  REWARDABLEMINQUANTITY 
  
)

SELECT 
  PNSERVICEPRICETABLEDETAILID,
  TMS_PNSERVICEPRICETABLEDETAIL.PNSERVICEPRICETABLEID,
  PM_PRODUCT.PRODUCTID,
  SERVICEPRICE,
  TMS_PNSERVICEPRICETABLEDETAIL.ISCHECKMINQUANTITY,
  TMS_PNSERVICEPRICETABLEDETAIL.REWARDABLEMINQUANTITY  
 FROM TMS.TMS_PNSERVICEPRICETABLE
 JOIN TMS.TMS_PNSERVICEPRICETABLEDETAIL ON TMS_PNSERVICEPRICETABLE.PNSERVICEPRICETABLEID = TMS_PNSERVICEPRICETABLEDETAIL.PNSERVICEPRICETABLEID
JOIN MASTERDATA.PM_PRODUCT ON TMS_PNSERVICEPRICETABLEDETAIL.SUBGROUPID = PM_PRODUCT.SUBGROUPID
JOIN MASTERDATA.PM_PRODUCT_TECHSPECS 
  ON PM_PRODUCT.PRODUCTID = PM_PRODUCT_TECHSPECS.PRODUCTID
  AND PM_PRODUCT_TECHSPECS.TECHSPECSID = TMS_PNSERVICEPRICETABLEDETAIL.TECHSPECSID
  AND PM_PRODUCT_TECHSPECS.TECHSPECSVALUEID = TMS_PNSERVICEPRICETABLEDETAIL.TECHSPECSVALUEID
WHERE TMS_PNSERVICEPRICETABLE.ISDELETED = 0
AND TMS_PNSERVICEPRICETABLE.ISACTIVED = 1
AND TMS_PNSERVICEPRICETABLEDETAIL.ISPRICEBYTECHSPECSVALUERANGE = 0
AND TMS_PNSERVICEPRICETABLEDETAIL.TECHSPECSID > 0
AND TMS_PNSERVICEPRICETABLEDETAIL.TECHSPECSVALUEID > 0
AND NOT EXISTS(SELECT 1 FROM TMS_PNPAYABLE_PRICETBL
WHERE TMS_PNPAYABLE_PRICETBL.PRODUCTID = PM_PRODUCT.PRODUCTID
AND TMS_PNPAYABLE_PRICETBL.PNSERVICEPRICETABLEID = TMS_PNSERVICEPRICETABLEDETAIL.PNSERVICEPRICETABLEID)
;

--Đơn giá phí theo khoảng giá trị thông số kỹ thuật
INSERT INTO TMS.TMS_PNPAYABLE_PRICETBL (
  PNSERVICEPRICETABLEDETAILID,
  PNSERVICEPRICETABLEID,
  PRODUCTID,
  SERVICEPRICE,
  ISCHECKMINQUANTITY,
  REWARDABLEMINQUANTITY  
  
)

SELECT 
  PNSERVICEPRICETABLEDETAILID,
  TMS_PNSERVICEPRICETABLEDETAIL.PNSERVICEPRICETABLEID,
  PM_PRODUCT.PRODUCTID,
  SERVICEPRICE,
  TMS_PNSERVICEPRICETABLEDETAIL.ISCHECKMINQUANTITY,
  TMS_PNSERVICEPRICETABLEDETAIL.REWARDABLEMINQUANTITY   
 FROM TMS.TMS_PNSERVICEPRICETABLE
 JOIN TMS.TMS_PNSERVICEPRICETABLEDETAIL ON TMS_PNSERVICEPRICETABLE.PNSERVICEPRICETABLEID = TMS_PNSERVICEPRICETABLEDETAIL.PNSERVICEPRICETABLEID
JOIN MASTERDATA.PM_PRODUCT ON TMS_PNSERVICEPRICETABLEDETAIL.SUBGROUPID = PM_PRODUCT.SUBGROUPID
JOIN MASTERDATA.PM_PRODUCT_TECHSPECS 
  ON PM_PRODUCT.PRODUCTID = PM_PRODUCT_TECHSPECS.PRODUCTID
  AND PM_PRODUCT_TECHSPECS.TECHSPECSID = TMS_PNSERVICEPRICETABLEDETAIL.TECHSPECSID
JOIN MASTERDATA.PM_TECHSPECSVALUE ON PM_PRODUCT_TECHSPECS.TECHSPECSVALUEID = PM_TECHSPECSVALUE.TECHSPECSVALUEID
AND PM_TECHSPECSVALUE.COMPAREVALUE >= TMS_PNSERVICEPRICETABLEDETAIL.FROMTECHSPECSVALUE
AND PM_TECHSPECSVALUE.COMPAREVALUE <= TMS_PNSERVICEPRICETABLEDETAIL.TOTECHSPECSVALUE
 
WHERE TMS_PNSERVICEPRICETABLE.ISDELETED = 0
AND TMS_PNSERVICEPRICETABLE.ISACTIVED = 1
AND TMS_PNSERVICEPRICETABLEDETAIL.ISPRICEBYTECHSPECSVALUERANGE = 1
AND TMS_PNSERVICEPRICETABLEDETAIL.TECHSPECSID > 0
AND TMS_PNSERVICEPRICETABLEDETAIL.TECHSPECSVALUEID < 1
AND NOT EXISTS(SELECT 1 FROM TMS_PNPAYABLE_PRICETBL
WHERE TMS_PNPAYABLE_PRICETBL.PRODUCTID = PM_PRODUCT.PRODUCTID
AND TMS_PNPAYABLE_PRICETBL.PNSERVICEPRICETABLEID = TMS_PNSERVICEPRICETABLEDETAIL.PNSERVICEPRICETABLEID)
;


--Đơn giá phí theo nhóm hàng
INSERT INTO TMS.TMS_PNPAYABLE_PRICETBL (
  PNSERVICEPRICETABLEDETAILID,
  PNSERVICEPRICETABLEID,
  PRODUCTID,
  SERVICEPRICE,
  ISCHECKMINQUANTITY,
  REWARDABLEMINQUANTITY 
  
)

SELECT 
  PNSERVICEPRICETABLEDETAILID,
  TMS_PNSERVICEPRICETABLEDETAIL.PNSERVICEPRICETABLEID,
  PM_PRODUCT.PRODUCTID,
  SERVICEPRICE ,
  TMS_PNSERVICEPRICETABLEDETAIL.ISCHECKMINQUANTITY,
  TMS_PNSERVICEPRICETABLEDETAIL.REWARDABLEMINQUANTITY  
 FROM TMS.TMS_PNSERVICEPRICETABLE
 JOIN TMS.TMS_PNSERVICEPRICETABLEDETAIL ON TMS_PNSERVICEPRICETABLE.PNSERVICEPRICETABLEID = TMS_PNSERVICEPRICETABLEDETAIL.PNSERVICEPRICETABLEID
JOIN MASTERDATA.PM_PRODUCT ON TMS_PNSERVICEPRICETABLEDETAIL.SUBGROUPID = PM_PRODUCT.SUBGROUPID


WHERE TMS_PNSERVICEPRICETABLE.ISDELETED  = 0
AND TMS_PNSERVICEPRICETABLE.ISACTIVED = 1
AND TMS_PNSERVICEPRICETABLEDETAIL.TECHSPECSID < 1
AND TMS_PNSERVICEPRICETABLEDETAIL.TECHSPECSVALUEID < 1
AND TRIM(TMS_PNSERVICEPRICETABLEDETAIL.PRODUCTID) IS NULL 
AND TMS_PNSERVICEPRICETABLEDETAIL.SUBGROUPID > 0
AND NOT EXISTS(SELECT 1 FROM TMS_PNPAYABLE_PRICETBL
WHERE TMS_PNPAYABLE_PRICETBL.PRODUCTID = PM_PRODUCT.PRODUCTID
AND TMS_PNPAYABLE_PRICETBL.PNSERVICEPRICETABLEID = TMS_PNSERVICEPRICETABLEDETAIL.PNSERVICEPRICETABLEID)
;


--Đơn giá phí theo nhóm hàng
INSERT INTO TMS.TMS_PNPAYABLE_PRICETBL (
  PNSERVICEPRICETABLEDETAILID,
  PNSERVICEPRICETABLEID,
  PRODUCTID,
  SERVICEPRICE,
  ISCHECKMINQUANTITY,
  REWARDABLEMINQUANTITY  
  
)

SELECT 
  PNSERVICEPRICETABLEDETAILID,
  TMS_PNSERVICEPRICETABLEDETAIL.PNSERVICEPRICETABLEID,
  PM_PRODUCT.PRODUCTID,
  SERVICEPRICE ,
  TMS_PNSERVICEPRICETABLEDETAIL.ISCHECKMINQUANTITY,
  TMS_PNSERVICEPRICETABLEDETAIL.REWARDABLEMINQUANTITY  
 FROM TMS.TMS_PNSERVICEPRICETABLE
 JOIN TMS.TMS_PNSERVICEPRICETABLEDETAIL ON TMS_PNSERVICEPRICETABLE.PNSERVICEPRICETABLEID = TMS_PNSERVICEPRICETABLEDETAIL.PNSERVICEPRICETABLEID
JOIN MASTERDATA.PM_SUBGROUP  ON TMS_PNSERVICEPRICETABLEDETAIL.MAINGROUPID = PM_SUBGROUP.MAINGROUPID
JOIN MASTERDATA.PM_PRODUCT ON PM_SUBGROUP.SUBGROUPID = PM_PRODUCT.SUBGROUPID


WHERE TMS_PNSERVICEPRICETABLE.ISDELETED  = 0
AND TMS_PNSERVICEPRICETABLE.ISACTIVED = 1
AND TMS_PNSERVICEPRICETABLEDETAIL.TECHSPECSID < 1
AND TMS_PNSERVICEPRICETABLEDETAIL.TECHSPECSVALUEID < 1
AND TRIM(TMS_PNSERVICEPRICETABLEDETAIL.PRODUCTID) IS NULL
AND TMS_PNSERVICEPRICETABLEDETAIL.SUBGROUPID < 1
AND TMS_PNSERVICEPRICETABLEDETAIL.MAINGROUPID > 0 
AND NOT EXISTS(SELECT 1 FROM TMS_PNPAYABLE_PRICETBL
WHERE TMS_PNPAYABLE_PRICETBL.PRODUCTID = PM_PRODUCT.PRODUCTID
AND TMS_PNPAYABLE_PRICETBL.PNSERVICEPRICETABLEID = TMS_PNSERVICEPRICETABLEDETAIL.PNSERVICEPRICETABLEID)
;

DELETE TMS.TMS_PNPAYABLE_SO;

INSERT INTO TMS.TMS_PNPAYABLE_SO (
  SHIPMENTORDERID,
  PAYABLEDATE,
  PARTNERID,
  AREAID ,
  STOREID ,
  SHIPMENTORDERITEMID,
  PRODUCTID,
  DELIVERYUSER,
  QUANTITY)

SELECT 
TMS_SHIPMENTORDER.SHIPMENTORDERID,
  TRUNC(TMS_SHIPMENTORDER.COMPLETEDELIVERIEDTIME, 'DD') PAYABLEDATE,
  TMS_SHIPMENTORDER.CARRIERPARTNERID PARTNERID,
  MD_STORE_AREA.AREAID ,
  TMS_SHIPMENTORDER.COORDINATORSTOREID STOREID ,
  TMS_SHIPMENTORDER_ITEM.SHIPMENTORDERITEMID,
  TMS_SHIPMENTORDER_ITEM.PRODUCTID,
  '' DELIVERYUSER,
  TMS_SHIPMENTORDER_ITEM.QUANTITY




 FROM TMS_SHIPMENTORDER
JOIN TMS_SHIPMENTORDER_ITEM  ON TMS_SHIPMENTORDER.SHIPMENTORDERID = TMS_SHIPMENTORDER_ITEM.SHIPMENTORDERID
JOIN MDM.MD_STORE_AREA ON TMS_SHIPMENTORDER.COORDINATORSTOREID = MD_STORE_AREA.STOREID
AND MD_STORE_AREA.ISDELETED = 0
WHERE TMS_SHIPMENTORDER.ISDELETED = 0
AND TMS_SHIPMENTORDER_ITEM.ISDELETED  = 0
AND TMS_SHIPMENTORDER.ISCOMPLETEDELIVERIED = 1
AND TMS_SHIPMENTORDER.ISCANCELDELIVERY = 0
AND TMS_SHIPMENTORDER.CARRIERPARTNERID > 0
AND TMS_SHIPMENTORDER_ITEM.ISINSTALLITEM = 1
AND TMS_SHIPMENTORDER.COMPLETEDELIVERIEDTIME >= TRUNC(v_PAYABLEDATE, 'DD')
AND TMS_SHIPMENTORDER.COMPLETEDELIVERIEDTIME < TRUNC(v_PAYABLEDATE, 'DD') + 1;

DELETE TMS.TMS_PNPAYABLE_MATERIAL;

INSERT INTO TMS.TMS_PNPAYABLE_MATERIAL (
  SHIPMENTORDERID,
  PAYABLEDATE,
  PARTNERID,
  AREAID ,
  STOREID ,
  SHIPMENTORDERITEMID,
  PRODUCTID,
  DELIVERYUSER,
  QUANTITY)

SELECT 
TMS_SHIPMENTORDER.SHIPMENTORDERID,
  TRUNC(TMS_SHIPMENTORDER.COMPLETEDELIVERIEDTIME, 'DD') PAYABLEDATE,
  TMS_SHIPMENTORDER.CARRIERPARTNERID PARTNERID,
  MD_STORE_AREA.AREAID ,
  TMS_SHIPMENTORDER.COORDINATORSTOREID STOREID ,
  TMS_SHIPMENTORDER_MATERIAL2.SHIPMENTORDERMATERIALID,
  TMS_SHIPMENTORDER_MATERIAL2.PRODUCTID,
  '' DELIVERYUSER,
  TMS_SHIPMENTORDER_MATERIAL2.USAGEQUANTITY




 FROM TMS_SHIPMENTORDER
JOIN TMS_SHIPMENTORDER_MATERIAL2  ON TMS_SHIPMENTORDER.SHIPMENTORDERID = TMS_SHIPMENTORDER_MATERIAL2.SHIPMENTORDERID
JOIN MDM.MD_STORE_AREA ON TMS_SHIPMENTORDER.COORDINATORSTOREID = MD_STORE_AREA.STOREID
AND MD_STORE_AREA.ISDELETED = 0
WHERE TMS_SHIPMENTORDER.ISDELETED = 0
AND TMS_SHIPMENTORDER_MATERIAL2.ISDELETED  = 0
AND TMS_SHIPMENTORDER.ISCOMPLETEDELIVERIED = 1
AND TMS_SHIPMENTORDER.ISCANCELDELIVERY = 0
AND TMS_SHIPMENTORDER.CARRIERPARTNERID > 0
AND TMS_SHIPMENTORDER_MATERIAL2.USAGEQUANTITY > 0
AND TMS_SHIPMENTORDER.COMPLETEDELIVERIEDTIME >= TRUNC(v_PAYABLEDATE, 'DD')
AND TMS_SHIPMENTORDER.COMPLETEDELIVERIEDTIME < TRUNC(v_PAYABLEDATE, 'DD') + 1;



DELETE TMP_PARTNERPAYABLEDETAIL;

--tính chi phí giao hàng
INSERT INTO TMS.TMP_PARTNERPAYABLEDETAIL (
  PAYABLEDATE ,
  PARTNERID ,   
  SHIPMENTORDERID  ,
  SHIPMENTORDERITEMID ,
  PRODUCTID  ,
  DELIVERYUSER ,
  SERVICEFEE  ,
  QUANTITY,
  PAYABLEAMOUNT,
  SERVICEAGREEMENTID,
  AREAID,
  STOREID,
  FEEAPPENDIXID,
  PNSERVICEPRICETABLEDETAILID,
  PNSERVICEPRICETABLEID,
  UPDATEDUSER ,
  UPDATEDDATE)

SELECT 
TMS_PNPAYABLE_SO.PAYABLEDATE ,
TMS_PNPAYABLE_SO.PARTNERID,    
TMS_PNPAYABLE_SO.SHIPMENTORDERID  ,
TMS_PNPAYABLE_SO.SHIPMENTORDERITEMID ,
TMS_PNPAYABLE_SO.PRODUCTID,
''  DELIVERYUSER ,
NVL(TMS_PNPAYABLE_PRICETBL.SERVICEPRICE,0)  SERVICEFEE  ,
TMS_PNPAYABLE_SO.QUANTITY, 
NVL(TMS_PNPAYABLE_PRICETBL.SERVICEPRICE,0) * TMS_PNPAYABLE_SO.QUANTITY  PAYABLEAMOUNT,
TMS_PNPAYABLE_SO.SERVICEAGREEMENTID,
TMS_PNPAYABLE_SO.AREAID,
TMS_PNPAYABLE_SO.STOREID,
TMS_PNPAYABLE_SO.FEEAPPENDIXID,
  TMS_PNPAYABLE_PRICETBL.PNSERVICEPRICETABLEDETAILID,
  TMS_PNPAYABLE_SO.PNSERVICEPRICETABLEID,

'administrator'  UPDATEDUSER ,
 SYSDATE UPDATEDDATE


 FROM 
 (SELECT TMS_PNPAYABLE_SO.PAYABLEDATE ,
TMS_PNPAYABLE_SO.PARTNERID,    
TMS_PNPAYABLE_SO.AREAID,
TMS_PNPAYABLE_SO.STOREID,
TMS_PNPAYABLE_SO.SHIPMENTORDERID  ,
TMS_PNPAYABLE_SO.SHIPMENTORDERITEMID ,
TMS_PNPAYABLE_SO.PRODUCTID,
TMS_PNPAYABLE_SO.QUANTITY,
NVL(TMS_PNPAYABLE_SA2.SERVICEAGREEMENTID, TMS_PNPAYABLE_SA.SERVICEAGREEMENTID) SERVICEAGREEMENTID ,
NVL(TMS_PNPAYABLE_SA2.FEEAPPENDIXID, TMS_PNPAYABLE_SA.FEEAPPENDIXID) FEEAPPENDIXID,
NVL(TMS_PNPAYABLE_SA2.PNSERVICEPRICETABLEID, TMS_PNPAYABLE_SA.PNSERVICEPRICETABLEID)  PNSERVICEPRICETABLEID
   FROM 
 TMS_PNPAYABLE_SO 
 LEFT JOIN TMS_PNPAYABLE_SA   ON TMS_PNPAYABLE_SO.PARTNERID = TMS_PNPAYABLE_SA.PARTNERID
      AND TMS_PNPAYABLE_SO.AREAID = TMS_PNPAYABLE_SA.AREAID
  LEFT JOIN TMS_PNPAYABLE_SA2 ON TMS_PNPAYABLE_SO.PARTNERID = TMS_PNPAYABLE_SA2.PARTNERID
  AND TMS_PNPAYABLE_SO.STOREID = TMS_PNPAYABLE_SA2.STOREID
  )
  TMS_PNPAYABLE_SO

LEFT JOIN TMS_PNPAYABLE_PRICETBL ON TMS_PNPAYABLE_SO.PRODUCTID = TMS_PNPAYABLE_PRICETBL.PRODUCTID
AND TMS_PNPAYABLE_PRICETBL.PNSERVICEPRICETABLEID = TMS_PNPAYABLE_SO.PNSERVICEPRICETABLEID
;


--tính chi phí vật tư sử dụng
INSERT INTO TMS.TMP_PARTNERPAYABLEDETAIL (
  PAYABLEDATE ,
  PARTNERID ,   
  SHIPMENTORDERID  ,
  SHIPMENTORDERITEMID ,
  PRODUCTID  ,
  DELIVERYUSER ,
  SERVICEFEE  ,
  QUANTITY,
  PAYABLEAMOUNT,
  SERVICEAGREEMENTID,
  AREAID,
  STOREID,
  FEEAPPENDIXID,
  PNSERVICEPRICETABLEDETAILID,
  PNSERVICEPRICETABLEID,
  UPDATEDUSER ,
  UPDATEDDATE)

SELECT 
TMS_PNPAYABLE_MATERIAL.PAYABLEDATE ,
TMS_PNPAYABLE_MATERIAL.PARTNERID,    
TMS_PNPAYABLE_MATERIAL.SHIPMENTORDERID  ,
TMS_PNPAYABLE_MATERIAL.SHIPMENTORDERITEMID ,
TMS_PNPAYABLE_MATERIAL.PRODUCTID,
''  DELIVERYUSER ,
NVL(TMS_PNPAYABLE_PRICETBL.SERVICEPRICE,0)  SERVICEFEE  ,
TMS_PNPAYABLE_MATERIAL.QUANTITY - NVL(TMS_PNPAYABLE_PRICETBL.REWARDABLEMINQUANTITY,0) QUANTITY, 
NVL(TMS_PNPAYABLE_PRICETBL.SERVICEPRICE,0) * (TMS_PNPAYABLE_MATERIAL.QUANTITY - NVL(TMS_PNPAYABLE_PRICETBL.REWARDABLEMINQUANTITY,0))  PAYABLEAMOUNT,
TMS_PNPAYABLE_MATERIAL.SERVICEAGREEMENTID,
TMS_PNPAYABLE_MATERIAL.AREAID,
TMS_PNPAYABLE_MATERIAL.STOREID,
TMS_PNPAYABLE_MATERIAL.FEEAPPENDIXID,
  TMS_PNPAYABLE_PRICETBL.PNSERVICEPRICETABLEDETAILID,
  TMS_PNPAYABLE_MATERIAL.PNSERVICEPRICETABLEID,

'administrator'  UPDATEDUSER ,
 SYSDATE UPDATEDDATE


 FROM 
 (SELECT TMS_PNPAYABLE_MATERIAL.PAYABLEDATE ,
TMS_PNPAYABLE_MATERIAL.PARTNERID,    
TMS_PNPAYABLE_MATERIAL.AREAID,
TMS_PNPAYABLE_MATERIAL.STOREID,
TMS_PNPAYABLE_MATERIAL.SHIPMENTORDERID  ,
TMS_PNPAYABLE_MATERIAL.SHIPMENTORDERITEMID ,
TMS_PNPAYABLE_MATERIAL.PRODUCTID, 
TMS_PNPAYABLE_MATERIAL.QUANTITY,
NVL(TMS_PNPAYABLE_SA2.SERVICEAGREEMENTID, TMS_PNPAYABLE_SA.SERVICEAGREEMENTID) SERVICEAGREEMENTID ,
NVL(TMS_PNPAYABLE_SA2.FEEAPPENDIXID, TMS_PNPAYABLE_SA.FEEAPPENDIXID) FEEAPPENDIXID,
NVL(TMS_PNPAYABLE_SA2.PNSERVICEPRICETABLEID, TMS_PNPAYABLE_SA.PNSERVICEPRICETABLEID)  PNSERVICEPRICETABLEID
   FROM 
 TMS_PNPAYABLE_MATERIAL
 LEFT JOIN TMS_PNPAYABLE_SA   ON TMS_PNPAYABLE_MATERIAL.PARTNERID = TMS_PNPAYABLE_SA.PARTNERID
      AND TMS_PNPAYABLE_MATERIAL.AREAID = TMS_PNPAYABLE_SA.AREAID
  LEFT JOIN TMS_PNPAYABLE_SA2 ON TMS_PNPAYABLE_MATERIAL.PARTNERID = TMS_PNPAYABLE_SA2.PARTNERID
  AND TMS_PNPAYABLE_MATERIAL.STOREID = TMS_PNPAYABLE_SA2.STOREID
  )
  TMS_PNPAYABLE_MATERIAL

 JOIN TMS_PNPAYABLE_PRICETBL ON TMS_PNPAYABLE_MATERIAL.PRODUCTID = TMS_PNPAYABLE_PRICETBL.PRODUCTID
AND TMS_PNPAYABLE_PRICETBL.PNSERVICEPRICETABLEID = TMS_PNPAYABLE_MATERIAL.PNSERVICEPRICETABLEID
WHERE TMS_PNPAYABLE_MATERIAL.QUANTITY > NVL(TMS_PNPAYABLE_PRICETBL.REWARDABLEMINQUANTITY,0)
;
 



DELETE TMS.TMS_PARTNERPAYABLEDETAIL
  WHERE TMS_PARTNERPAYABLEDETAIL.PAYABLEDATE >= TRUNC(v_PAYABLEDATE, 'DD')
      AND TMS_PARTNERPAYABLEDETAIL.PAYABLEDATE < TRUNC(v_PAYABLEDATE, 'DD') + 1;


INSERT INTO TMS.TMS_PARTNERPAYABLEDETAIL (
  PAYABLEDATE ,
  PARTNERID ,   
  SHIPMENTORDERID  ,
  SHIPMENTORDERITEMID ,
  PRODUCTID  ,
  DELIVERYUSER ,
  SERVICEFEE  ,
  QUANTITY,
  PAYABLEAMOUNT,
  SERVICEAGREEMENTID,
  AREAID,
  STOREID,
  FEEAPPENDIXID,
  PNSERVICEPRICETABLEDETAILID,
  PNSERVICEPRICETABLEID,
  UPDATEDUSER ,
  UPDATEDDATE)

SELECT 
PAYABLEDATE ,
  PARTNERID ,   
  SHIPMENTORDERID  ,
  SHIPMENTORDERITEMID ,
  PRODUCTID  ,
  DELIVERYUSER ,
  SERVICEFEE  ,
  QUANTITY,
  PAYABLEAMOUNT,
  SERVICEAGREEMENTID,
  AREAID,
  STOREID,
  FEEAPPENDIXID,
  PNSERVICEPRICETABLEDETAILID,
  PNSERVICEPRICETABLEID,
  UPDATEDUSER ,
  UPDATEDDATE


 FROM TMP_PARTNERPAYABLEDETAIL;



DELETE TMS.TMS_PARTNERPAYABLE
  WHERE TMS_PARTNERPAYABLE.PAYABLEDATE >= TRUNC(v_PAYABLEDATE, 'DD')
      AND TMS_PARTNERPAYABLE.PAYABLEDATE < TRUNC(v_PAYABLEDATE, 'DD') + 1;



INSERT INTO TMS.TMS_PARTNERPAYABLE (
  PAYABLEDATE,
  PARTNERID,
  TOTALQUANTITY,
  PAYABLEAMOUNT,
  UPDATEDUSER,
  UPDATEDDATE
)

SELECT PAYABLEDATE,
  PARTNERID,
  SUM(QUANTITY),
  SUM(PAYABLEAMOUNT) PAYABLEAMOUNT,
  UPDATEDUSER,
  UPDATEDDATE

FROM TMP_PARTNERPAYABLEDETAIL
GROUP BY PAYABLEDATE,
  PARTNERID,
  UPDATEDUSER,
  UPDATEDDATE;


DELETE TMS.TMS_PARTNERPAYABLE_PRICETBL
WHERE PAYABLEMONTH >= TRUNC(v_PAYABLEDATE)
AND PAYABLEMONTH < TRUNC(v_PAYABLEDATE) + 1 ;

INSERT INTO TMS.TMS_PARTNERPAYABLE_PRICETBL (
  PAYABLEMONTH,
  PNSERVICEPRICETABLEID,
  PNSERVICEPRICETABLEDETAILID,
  PRODUCTID,
  SERVICEPRICE,
  UPDATEDUSER,
  UPDATEDDATE)
  SELECT 
	TRUNC(v_PAYABLEDATE) PAYABLEMONTH,
  PNSERVICEPRICETABLEID,
  PNSERVICEPRICETABLEDETAILID,
  PRODUCTID,
  SERVICEPRICE,
  'administrator' UPDATEDUSER,
  SYSDATE UPDATEDDATE FROM TMS_PNPAYABLE_PRICETBL;



END;
/